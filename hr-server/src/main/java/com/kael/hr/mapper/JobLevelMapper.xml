<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kael.hr.mapper.JobLevelMapper">
    <resultMap id="jobLevelMap" type="com.kael.hr.entity.JobLevel">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="title_level" property="titleLevel" />
        <result column="create_date" property="createDate" />
        <result column="enabled" property="enabled" />
    </resultMap>

    <select id="findAllJobLevels" resultMap="jobLevelMap">
        select * from job_level
        <where>
            <if test="name != null">
                name=#{name}
            </if>
        </where>
    </select>

    <insert id="saveJobLevel">
        insert into
            job_level (name, title_level, create_date, enabled)
        value
            (#{jobLevel.name}, #{jobLevel.titleLevel}, #{jobLevel.createDate}, #{jobLevel.enabled})
    </insert>

    <update id="updateJobLevel">
        update
            job_level
        set
            name=#{jobLevel.name}, title_level=#{jobLevel.titleLevel}
        <if test="jobLevel.enabled != null">
            ,enabled=#{jobLevel.enabled}
        </if>
        where
            id=#{jobLevel.id}
    </update>

    <delete id="deletedJobLevel">
        delete from job_level where id = #{id}
    </delete>

    <select id="getCountEmployeeByJobLevelId" resultType="long">
        select count(*) from employee where job_level_id = #{jobLevelId}
    </select>

    <select id="findJobLevelNameById" resultType="string">
        select name from job_level where id = #{id}
    </select>
</mapper>